nomindics_tabD <- list(
"d_DLEx" = "Variation de l'EVAPA à 60 ans (en mois)",
"d_DLEx_prevconst" = "Contribution de la hausse de l'espérance de vie (en mois)",
"d_DLEx_mortconst" = "Contribution de la baisse des prévalences de l'APA (en mois)"
)
datadrees_prevalence <- prevalences %>%
mutate(prevalence = round(100*prevalence,1),
nb.milliers = round(nb/1000,0) ) %>%
mutate(age = age %>% trage_to_text(),
prestation = recode(prestation, "APAdom" = "APA", "APAetab" = "APA", "AidesMenag" = "Aides ménagères")) %>%
select(lieu,gir,annee,age,prestation,nb.milliers,prevalence) %>%
arrange(prestation,lieu,gir,annee,age)
names(datadrees_prevalence) <- recode(names(datadrees_prevalence) , !!! nomindics_tabA)
View(datadrees_prevalence)
names(tabcomplC) <- names(tabcomplC) %>% str_replace_all(" à 60 ans","")
datadrees_evapa <- bind_rows(
tabcomplB %>% mutate(methode = "À partir des prévalences en 8 tranches d'âge (disponible depuis 2016)"),
tabcomplC %>% mutate(methode = "À partir des prévalences en 6 tranches d'âge (disponible depuis 2010)", Âge = 60)
)
View(datadrees_evapa)
names(tabcomplB) <- recode(names(tabcomplB) , !!! nomindics_tabB)
names(tabcomplC) <- recode(names(tabcomplC) , !!! nomindics_tabC)
names(tabcomplC) <- names(tabcomplC) %>% str_replace_all(" à 60 ans","")
datadrees_evapa <- bind_rows(
tabcomplB %>% mutate(methode = "À partir des prévalences en 8 tranches d'âge (disponible depuis 2016)"),
tabcomplC %>% mutate(methode = "À partir des prévalences en 6 tranches d'âge (disponible depuis 2010)", Âge = 60)
)
View(datadrees_evapa)
datadrees_evapa <- bind_rows(
tabcomplB %>% mutate(Méthode = "À partir des prévalences en 8 tranches d'âge (disponible depuis 2016)"),
tabcomplC %>% mutate(Méthode = "À partir des prévalences en 6 tranches d'âge (disponible depuis 2010)", Âge = 60)
)
View(datadrees_evapa)
write.csv2(datadrees_evapa, "DataDREES_evapa.csv",fileEncoding = "UTF-8",row.names=FALSE)
tabcomplD <- cumdecompevapa_age %>%
filter(annee==2019,gir=="Ensemble",lieu=="ensemble") %>%
select(-annee,-gir,-prestation,-lieu)
tabcomplD <- bind_rows(
tabcomplD,
tabcomplD %>% select(-trAge) %>% summarise_all(sum) %>% mutate(trAge="Ensemble")
) %>%
mutate_if(is.numeric,function(x){round(x,1)}) %>%
mutate(trAge = ifelse(grepl("\\[",trAge),trage_to_text(trAge),trAge ) )
View(tabcomplD)
View(tabcomplD)
library(openxlsx)
library(tidyverse)
rep <- read.xlsx("bilan_du_cours___politiques_du_handicap___master_2_coss___octobre_2020.xlsx")
View(rep)
View(rep)
rep <- read.xlsx("bilan_du_cours___politiques_du_handicap___master_2_coss___octobre_2020.xlsx",
sheet="Sheet1")
View(rep)
?read.xlsx
rep <- read.xlsx("bilan_du_cours___politiques_du_handicap___master_2_coss___octobre_2020.xlsx",
sheet="Sheet1",
startRow=3,colNames=FALSE)
rep <- read.xlsx("bilan_du_cours___politiques_du_handicap___master_2_coss___octobre_2020.xlsx",
sheet="Sheet1",
startRow=3,colNames=FALSE,rows=c(3:12),cols=c(1:20))
rep <- read.xlsx("bilan_du_cours___politiques_du_handicap___master_2_coss___octobre_2020.xlsx",
sheet="Sheet1",
colNames=FALSE,rows=c(3:12),cols=c(1:20))
rep <- read.xlsx("bilan_du_cours___politiques_du_handicap___master_2_coss___octobre_2020.xlsx",
sheet="Sheet1")#,
# colNames=FALSE,rows=c(3:12),cols=c(1:20))
View(rep)
rep <- read.xlsx("bilan_du_cours___politiques_du_handicap___master_2_coss___octobre_2020.xlsx",
sheet="Feuil1")#,
# colNames=FALSE,rows=c(3:12),cols=c(1:20))
View(rep)
rep <- read.xlsx("bilan_du_cours___politiques_du_handicap___master_2_coss___octobre_2020.xlsx",
sheet="Feuil1", colNames=FALSE)
View(rep)
library(readxl)
library(tidyverse)
getwd()
getwd()
library(readxl)
library(tidyverse)
# remotes::install_github("patrickaubert/asdep",ref='main')
library(asdep)
# remotes::install_github("patrickaubert/healthexpectancies",ref='main')
library(healthexpectancies)
graphloc <- function(...) ggplotAsdep(...)
graphlocly <- function(...) ggplotlyAsdep(...)
setwd("C:/Users/patrick.aubert/Documents/Etudes/2021_08_EVAPA/ouverture du code/")
sessionInfo()
library(readxl)
library(tidyverse)
# remotes::install_github("patrickaubert/asdep",ref='main')
library(asdep)
# remotes::install_github("patrickaubert/healthexpectancies",ref='main')
library(healthexpectancies)
graphloc <- function(...) ggplotAsdep(...)
graphlocly <- function(...) ggplotlyAsdep(...)
setwd("C:/Users/patrick.aubert/Documents/Etudes/2021_08_EVAPA/ouverture du code/")
extrAPA2016 <- function(an,rangegir="A3:E5",rangeage ="A12:I17",rangegirage="A5:I12") {
fich <- paste("data-raw/APA - Données détaillées par GIR, âge et sexe en ",
as.character(an),".xlsx",sep="")
gir <- read_excel(fich,sheet = "nat-APA par GIR", range = rangegir)
names(gir) <- c("prestation", names(gir)[2:5])
gir <- gir %>% pivot_longer(cols=-prestation,names_to="gir",values_to="part")
age <- read_excel(fich,sheet = "nat-APA par sexe et par âge", range = rangeage) %>% filter(!is.na(...1))
names(age) <- c("prestation", names(age)[2:NROW(names(age))])
age <- age %>% pivot_longer(cols=-prestation,names_to="trAge",values_to="part")
girage <- read_excel(fich,sheet = "nat-APA par GIR et âge", col_names=FALSE, range = rangegirage)
names(girage) <- c("trAge",paste0("domicile_GIR",1:4),paste0("étab_GIR",1:4))
girage <- girage %>% pivot_longer(cols=-trAge,names_to="trGirAge",values_to="partGir") %>%
mutate(prestation = gsub("_.*$","",trGirAge),
gir = gsub("^.*_","",trGirAge)) %>%
select(-trGirAge)
return(list(
gir = gir %>% mutate(annee = an),
age = age %>% mutate(annee = an),
girage = girage %>% mutate(annee = an)
))
}
extrAPA2014 <- function(an,rangegir="A3:D4",rangeage ="A3:G5",rangegirage="A5:I10") {
fich <- paste("data-raw/APA - Données détaillées par GIR, âge et sexe en ",
as.character(an),".xlsx",sep="")
girdom <- read_excel(fich,sheet = "nat-APA domicile par GIR", range = rangegir)
giretab <- read_excel(fich,sheet = "nat-APA étab par GIR", range = rangegir)
gir <- rbind(girdom %>% mutate(prestation = "APAdom"),
giretab %>% mutate(prestation = "APAetab")) %>%
pivot_longer(cols=-prestation,names_to="gir",values_to="part")
agedom <- read_excel(fich,sheet = "nat-APA domicile par âge", range = rangeage)
ageetab <- read_excel(fich,sheet = "nat-APA étab par âge", range = rangeage)
age <-  rbind(agedom,ageetab ) %>%
rename( "prestation" = "...1") %>%
pivot_longer(cols=-prestation,names_to="trAge",values_to="part")
girage <- read_excel(fich,sheet = "nat-APA par GIR et âge", col_names=FALSE, range = rangegirage)
names(girage) <- c("trAge",paste0("domicile_GIR",1:4),paste0("étab_GIR",1:4))
girage <- girage %>% pivot_longer(cols=-trAge,names_to="trGirAge",values_to="partGir") %>%
mutate(prestation = gsub("_.*$","",trGirAge),
gir = gsub("^.*_","",trGirAge)) %>%
select(-trGirAge)
return(list(
gir = gir %>% mutate(annee = an),
age = age %>% mutate(annee = an),
girage = girage %>% mutate(annee = an)
))
}
extrAPA2010 <- function(an,rangegir="A3:D5",rangeagedom ="B9:G12",
rangeageetab ="A4:F11",rangegirage="A3:E9") {
fich <- paste("data-raw/Les bénéficiaires de l'aide sociale départementale en ",
as.character(an),".xlsx",sep="")
graph <- function(nb) ifelse(an==2010,paste0("graph",nb),paste0("Graph",nb))
tab <- function(nb) ifelse(an==2010,paste0("tab",nb),paste0("Tab",nb))
girdom <- read_excel(fich,sheet = graph(4), range = rangegir)
# attention : pour les fichiers 2012 et 2013, on a supprimé  à la main la 3e ligne de l'onglet Graph3
giretab <- read_excel(fich,sheet = graph(3), range = rangegir)
gir <- rbind(girdom[2,] %>% mutate(prestation = "APAdom"),
giretab[2,] %>% mutate(prestation = "APAetab")) %>%
pivot_longer(cols=-prestation,names_to="gir",values_to="part")
if (an == 2010) {
agedom <- read_excel(fich,sheet = graph(6), range = rangeagedom)[3,] %>%
mutate(prestation = "APAdom")
ageetab <- read_excel(fich,sheet = graph(7), range = rangeageetab)[c(2,7),]  %>%
mutate(prestation = c("ASH","APAetab"))
} else if (an<=2011) {
agedom <- read_excel(fich,sheet = graph(6), range = "B3:G8")[5,] %>%
mutate(prestation = "APAdom")
ageetab <- read_excel(fich,sheet = graph(7), range = "B3:G7")[c(2,4),]  %>%
mutate(prestation = c("ASH","APAetab"))
} else  {
agedom <- read_excel(fich,sheet = graph(6), range = "B3:G9")[6,] %>%
mutate(prestation = "APAdom")
ageetab <- read_excel(fich,sheet = graph(7), range = "B3:G9")[c(5,6),]  %>%
mutate(prestation = c("ASH","APAetab"))
}
age <-  rbind(
agedom %>%  pivot_longer(cols=-prestation,names_to="trAge",values_to="part"),
ageetab %>%  pivot_longer(cols=-prestation,names_to="trAge",values_to="part")
)
if (an == 2013) {
giragedom <- read_excel(fich,sheet = "Graph 8 ", range = rangegirage)
girageetab <- read_excel(fich,sheet = "Graph9", range = rangegirage)
} else {
giragedom <- read_excel(fich,sheet = tab(1), range = rangegirage)
girageetab <- read_excel(fich,sheet = tab(2), range = rangegirage)
}
names(giragedom) <- c("trAge",names(giragedom)[2:5])
names(girageetab) <- c("trAge",names(girageetab)[2:5])
girage <- rbind(giragedom %>% mutate(prestation = "APAdom"),
girageetab %>% mutate(prestation = "APAetab")) %>%
pivot_longer(cols=-c(trAge,prestation),names_to="gir",values_to="partGir")
girage <- girage[,c("trAge","partGir","prestation","gir")]
return(list(
gir = gir %>% mutate(annee = an),
age = age %>% mutate(annee = an),
girage = girage %>% mutate(annee = an)
))
}
dataApa <- list()
for (an in 2016:2019) {
dataApa[[as.character(an)]] <- extrAPA2016(an)
}
for (an in 2014:2015) {
dataApa[[as.character(an)]] <- extrAPA2014(an)
}
for (an in 2010:2013) {
dataApa[[as.character(an)]] <- extrAPA2010(an)
}
for (an in 2010:2013) {
dataApa[[as.character(an)]] <- extrAPA2010(an)
}
dataApa <- list()
for (an in 2016:2019) {
dataApa[[as.character(an)]] <- extrAPA2016(an)
}
for (an in 2014:2015) {
dataApa[[as.character(an)]] <- extrAPA2014(an)
}
for (an in 2010:2013) {
dataApa[[as.character(an)]] <- extrAPA2010(an)
}
rangeAn <- c(2010:2019)
gir <- do.call("rbind", lapply(rangeAn, function(a){dataApa[[as.character(a)]]$gir}))
age <- do.call("rbind", lapply(rangeAn, function(a){dataApa[[as.character(a)]]$age}))
girage <- do.call("rbind", lapply(rangeAn, function(a){dataApa[[as.character(a)]]$girage}))
ageavt <- read_csv2(
"data-raw/part par âge et prestations_synthèse DT bénéficiaires aides sociales.csv") %>%
filter(type=="pct") %>%
select(-type,-total) %>%
pivot_longer(cols=-c("annee","prestation"),names_to="trAge",values_to="part") %>%
filter(!is.na(part)) %>%
group_by(annee,prestation) %>% mutate(part= part/sum(part)) %>% ungroup()
attr(ageavt, 'spec') <- NULL
age <- bind_rows(ageavt,
age %>% mutate(part = as.numeric(part)) )
presta <- list("APA à domicile" = "APAdom",
"Aide sociale à l'hébergement (ASH)" = "ASH",
"APA en établissement" = "APAetab",
"Aide sociale à l’hébergement (ASH)" = "ASH",
"APA en établissement (hors dotation globale)" = "APAetab",
"Aide ménagère" = "AidesMenag",
"Aide ménagères" = "AidesMenag",
"aide ménagère" = "AidesMenag",
"Domicile" = "APAdom",
"Etablissement" = "APAetab",
"APA HDG+EDG" = "APAetab",
"APA en établissements"= "APAetab",
"domicile" = "APAdom",
"étab" = "APAetab",
"aides à domicile" = "EnsAidesDom",
"aides à l’hébergement" = "EnsAidesEtab",
"PSD à domicile" = "PSDDom",
"PSD en établissement" = "PSDEtab",
"Ensemble des aides à domicile" = "EnsAidesDom",
"Ensemble des aides en établissement" = "EnsAidesEtab")
trancheage <- list(
"Moins de 65 ans" = "[60,65)",
"moins de 65 ans" = "[60,65)",
"de 60 à 65 ans" = "[60,65)",
"de 65 à 69 ans" = "[65,70)",
"de 70 à 74 ans" = "[70,75)",
"de 75 à 79 ans" = "[75,80)",
"de 80 à 84 ans" = "[80,85)",
"85 ans ou plus" = "[85,Inf]",
"85 ans et plus" = "[85,Inf]",
"de 85 à 89 ans" = "[85,90)",
"de 90 à 94 ans" = "[90,95)",
"95 ans et plus" = "[95,Inf]",
"95 ans ou plus" = "[95,Inf]"
)
age <- age %>%
mutate(part = as.numeric(part),
age = recode(tolower(trAge), !!!trancheage),
prestation = recode(prestation, !!!presta)) %>%
filter(prestation %in% unique(unlist(presta)))
gir <- gir %>%
mutate(prestation = recode(prestation, !!!presta)) %>%
filter(prestation %in% unique(unlist(presta)))
girage <- girage %>%
mutate(age = recode(tolower(trAge), !!!trancheage),
gir = gsub(" ","",gir),
prestation = recode(prestation, !!!presta)) %>%
filter(prestation %in% unique(unlist(presta)))
eff <- asdep::ASDEPslbenef[
ASDEPslbenef$Territoire == "TOTAL estimé France entière (hors Mayotte)",
c("Annee","NbBenefAPADomicile","NbBenefAPAEtab","NbBenefASH","NbBenefAideMenagerePA" )] %>%
filter(Annee %in% c(min(age$annee):max(age$annee))) %>%
rename(annee = Annee ,
APAdom = NbBenefAPADomicile,
APAetab = NbBenefAPAEtab ,
ASH = NbBenefASH,
AidesMenag = NbBenefAideMenagerePA) %>%
pivot_longer(cols=-annee,names_to="prestation",values_to="nb")
gir <- gir %>%
left_join(eff, by=c("annee","prestation")) %>%
mutate(nb = part*nb)
age <- age %>%
left_join(eff, by=c("annee","prestation")) %>%
mutate(nb = part*nb)
girage <- girage %>%
left_join(gir[,c("annee","prestation","gir","nb")], by=c("annee","prestation","gir")) %>%
mutate(nb = partGir*nb)
age2 <- bind_rows(
age %>% mutate(recale_gir = FALSE),
girage %>%
select(prestation,annee,age,nb) %>%
group_by(prestation,annee,age) %>% summarise_all(sum) %>% ungroup() %>%
mutate(recale_gir = TRUE) %>%
group_by(prestation,annee) %>% mutate(part=nb/sum(nb)) %>% ungroup()
)
age3 <- rbind(
age2 %>% select(prestation,annee,age,nb,recale_gir),
age2 %>%
filter(prestation %in% c("APAdom","APAetab")) %>%
select(annee,age,nb,recale_gir) %>%
group_by(annee,age,recale_gir) %>% summarise_all(sum) %>% ungroup() %>%
mutate(prestation = "APA") %>%
select(prestation,annee,age,nb,recale_gir)
)
# -- vérification de la cohérence ensemble vs. par lieu
#verifage <- age2 %>%
#  filter(grepl("^APA",prestation)) %>%
#  pivot_wider(id_cols=c("annee","age"),names_from="prestation",values_from="nb") %>%
#  mutate(ecart=APA-APAdom-APAetab)
#min(verifage$ecart)
#max(verifage$ecart)
girage2 <- rbind(
girage %>% mutate(prestation = paste0(prestation,"_",gir)) %>% select(prestation,annee,age,nb),
girage %>%
filter(prestation %in% c("APAdom","APAetab")) %>%
select(annee,age,gir,nb) %>%
group_by(annee,age,gir) %>% summarise_all(sum) %>% ungroup() %>%
mutate(prestation = "APA",
prestation = paste0(prestation,"_",gir)) %>%
select(prestation,annee,age,nb)
)
girage3 <- bind_rows(
girage2,
girage2 %>%
filter(grepl("^APA.*_GIR[12]$",prestation)) %>%
mutate(prestation = gsub("GIR[12]$","GIR12",prestation)) %>%
select(annee,age,prestation,nb) %>%
group_by(annee,age,prestation) %>% summarise_all(sum) %>% ungroup() %>%
select(prestation,annee,age,nb),
girage2 %>%
filter(grepl("^APA.*_GIR[34]$",prestation)) %>%
mutate(prestation = gsub("GIR[34]$","GIR34",prestation)) %>%
select(annee,age,prestation,nb) %>%
group_by(annee,age,prestation) %>% summarise_all(sum) %>% ungroup() %>%
select(prestation,annee,age,nb)
)
preval <- rbind( age3, girage3 %>% mutate(recale_gir=FALSE) )
prevalagecompl <- bind_rows(age3, girage3 %>% mutate(recale_gir=FALSE)) %>%
filter(annee>=2016, age %in% c("[85,90)","[90,95)","[95,Inf]")) %>%
select(prestation,annee,nb,recale_gir) %>%
group_by(prestation,annee,recale_gir) %>% summarise_all(sum) %>% ungroup() %>%
mutate(age ="[85,Inf]" ) %>%
select(prestation,annee,age,nb,recale_gir)
# source : https://www.insee.fr/fr/outil-interactif/5014911/pyramide.htm
# téléchargé le 17/07/2021
popnew <- read_csv2("data-raw/donnees_pyramide_act.csv")
names(popnew) <- tolower(names(popnew))
pop <- popnew %>%
rename(agefin = age) %>%
mutate(annee = annee-1) %>% #pour passer de la population au 01/01/N à celle au 31/12/N-1
select(-sexe) %>%
filter(agefin>=60,annee>=2000) %>%
group_by(annee,agefin) %>% summarise_all(sum) %>% ungroup()
popagr <- pop  %>%
mutate(travt = cut(agefin, breaks=c(60,65,70,75,80,85,Inf),include.lowest = TRUE, right = FALSE ),
trapr = cut(agefin, breaks=c(60,65,70,75,80,85,90,95,Inf),
include.lowest = TRUE, right = FALSE ),
age = ifelse(annee<=2015,as.character(travt),as.character(trapr))) %>%
select(annee,age,pop) %>%
group_by(annee,age) %>% summarise_all(sum) %>% ungroup() %>%
select(annee,age,pop)
#ggplot(popagr %>% filter(age %in% c("[85,90)",  "[90,95)",  "[95,Inf]")),
#ggplot(popagr %>% filter(age %in% c("[95,Inf]")),
#       aes(x=annee,y=pop,colour=age,group=age)) +
#  geom_line() +
#  geom_point()
#ggplot(age %>% filter(age %in% c("[95,Inf]"),grepl("^APA",prestation)),
#       aes(x=annee,y=part,colour=prestation,group=prestation)) +
#  geom_line() +
#  geom_point()
popagrcompl <- pop %>%
filter(annee>=2016, agefin>=85) %>%
select(annee,pop) %>%
group_by(annee) %>% summarise_all(sum) %>% ungroup() %>%
mutate(age = "[85,Inf]")
# calcul des prévalences
# regroupement en 6 classes d'âge jusqu'en 2015, 8 à partir de 2016
preval <- left_join(preval, popagr, by=c("annee","age")) %>%
mutate(prevalence = nb/pop)
# regroupement des 85 ans et plus à partir de 2016
prevalcompl <- left_join(prevalagecompl,  popagrcompl, by=c("annee","age")) %>%
mutate(prevalence = nb/pop)
# effectifs totaux par prestation
efftot <- preval %>%
select(prestation,annee,recale_gir,nb) %>%
filter(!is.na(nb)) %>%
group_by(prestation,recale_gir,annee) %>% summarise_all(sum) %>% ungroup() %>%
rename(nbtot = nb)
# ensemble des données
agesavant <-  c("[60,65)","[65,70)","[70,75)","[75,80)","[80,85)")
prevalences <- bind_rows(
preval %>%
mutate(decomp6age = ((annee<=2015)  | (age %in% agesavant)),
decomp8age = (annee>=2016)),
prevalcompl %>%
mutate(decomp6age = TRUE,
decomp8age = FALSE)
) %>%
filter(!is.na(nb)) %>%
left_join(efftot, by = c("annee","prestation","recale_gir")) %>%
mutate(part = nb / nbtot) %>%
rename(catprestation = prestation) %>%
mutate(gir = str_extract(catprestation,"(?<=_)GIR.*$"),
gir = ifelse(is.na(gir),"Ensemble",gir),
prestation = gsub("_.*$","",catprestation),
lieu = case_when(
grepl("[Dd]om$",prestation) ~ "domicile",
grepl("[Eeé]tab$",prestation) ~ "établissement",
(prestation == "ASH") ~ "établissement",
(prestation == "AidesMenag") ~ "domicile",
TRUE ~ "ensemble"
)) %>%
select(-nbtot,-catprestation)
prevalences <- prevalences[,c("prestation", "gir","lieu",
"annee","age",
"nb", "pop", "prevalence","part" ,
"recale_gir",
"decomp6age","decomp8age"
)]
View(prevalences)
# ==================================================================================================
# 4) Sauvegarde
# dernière réalisation : 17/07/2021
# == historique des versions :
# 17/07/2021 : ajout de la variable "recale_gir" et du calcul de l'APA tous GIR comme sommes de l'APA par GIR
# 20/06/2021 : correction de l'oubli de décalage d'une année de la pop (du 01/01/N+1 au 31/12/N)
write_csv2(prevalences,
"data/prevalences par âges - aides sociales aux personnes âgées.csv")
#library(readxl)
library(openxlsx)
library(tidyverse)
options(encoding="UTF8",
scipen=999)
setwd("C:/Users/patrick.aubert/Documents/Etudes/2021_08_EVAPA/ouverture du code/")
# ===
# Récupération des prévalences du Panorama AAS
# RQ : on a interverti à la main les colonnes APA établissements/domicile dans le fichier 2019, qui semblaient erronnées
aas <- bind_rows(
read.xlsx("data-raw/aas_fiche_12_apa.xlsx",sheet="G02",
rows=c(3:27),cols=c(1:5)) %>% mutate(annee = 2016),
read.xlsx("data-raw/aas19_15_les_be_ne_ficiaires_et_les_de_penses_d_apa_srok.xlsx",sheet="G01",
rows=c(4:28),cols=c(2:7)) %>% mutate(annee = 2017),
read.xlsx("data-raw/Fiche 15 - L%u2019allocation personnalisée d%u2019autonomie (APA).xlsx",
sheet="G01",
rows=c(4:25),cols=c(2:6)) %>% mutate(annee = 2018),
read.xlsx("data-raw/APA - Données détaillées par GIR, âge et sexe en 2019.xlsx",
sheet="nat-part APA dans pop",
rows=c(3:27),cols=c(2:6)) %>% mutate(annee = 2019)
) %>%
rename(sexe = X1,
age = X2) %>%
mutate(age = age %>%
str_replace("(^[Dd]e |^)(?=[[:digit:]]{2})","[") %>%
str_replace(" à ",",") %>%
str_replace(" ans (et|ou) plus$",",Inf]"),
finage = str_replace(age,"\\[[[:digit:]]{2}(,|)",""),
age = paste0(str_extract(age,"\\[[[:digit:]]{2},"),
ifelse(grepl("[[:digit:]]{2} ans$",finage),
paste0((1+as.numeric(str_extract(finage,"[[:digit:]]{2}(?= ans)"))),")"),
finage ) ),
#age = recode(age, !!!trancheage),
sexe = recode(sexe, "Total" = "Ensemble"),
gir = "Ensemble") %>%
select(-finage)
for (i in 2:nrow(aas)) {if (is.na(aas$sexe[i])) {aas$sexe[i] <- aas$sexe[i-1]} }
aas <- aas %>%
pivot_longer(cols=-c("annee","sexe","age","gir"),names_to="prestation",values_to="prevalence") %>%
mutate(prestation = recode(prestation,
"TOTAL" = "APA",
"APA.à.domicile" = "APAdom",
"APA.en.établissement" = "APAetab"),
lieu = recode(prestation,
"APA" = "ensemble",
"APAdom" = "domicile",
"APAetab" = "établissement"),
prevalence = prevalence / ifelse(annee %in% c(2019),100,1))
# ===
# Récupération des populations
# source : https://www.insee.fr/fr/outil-interactif/5014911/pyramide.htm
# téléchargé le 16/05/2021
popnew <- read_csv2("data-raw/donnees_pyramide_act.csv")
names(popnew) <- tolower(names(popnew))
pop <- popnew %>%
rename(agefin = age) %>%
mutate(annee = annee-1) %>% #pour passer de la population au 01/01/N à celle au 31/12/N-1
select(-sexe) %>%
filter(agefin>=60,annee>=2016) %>%
group_by(annee,agefin) %>% summarise_all(sum) %>% ungroup()
popagr <- pop  %>%
mutate(travt = cut(agefin, breaks=c(60,65,70,75,80,85,90,95,Inf),include.lowest = TRUE, right = FALSE ),
trapr = cut(agefin, breaks=c(60,65,70,75,80,85,90,Inf),
include.lowest = TRUE, right = FALSE ),
age = ifelse(annee!=2018,as.character(travt),as.character(trapr))) %>%
select(annee,age,pop) %>%
group_by(annee,age) %>% summarise_all(sum) %>% ungroup() %>%
select(annee,age,pop)
aas <- left_join(aas, popagr, by=c("annee","age")) %>%
mutate(nb = prevalence * pop)
write_csv2(x = aas ,
file = "data/panorama AAS - prevalences de l APA par âges.csv")
save(aas,file="data/panorama AAS - prevalences de l APA par âges.Rda")
